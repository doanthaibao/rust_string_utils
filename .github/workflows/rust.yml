name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always
  LLVM_PROFILE_FILE: "bo-%p-%m.profraw"
  RUSTFLAGS: "-Cinstrument-coverage"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          rustup component add llvm-tools-preview && cargo install grcov && sudo apt-get update && sudo apt-get install -y lcov
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
      - name: Run coverage
        run: grcov . -s . --binary-path ./target/debug/ -t lcov --branch --ignore-not-existing -o lcov.info
      - name: Generate HTML report
        run: genhtml -o coverage lcov.info
      - name: Check coverage
        run: |
          coverage=$(grep -Eo '<td class="coverPerHi">[^<]+' coverage/index.html | sed -E 's/<td class="coverPerHi">//g' | head -n 1 | sed -E 's/&nbsp;%//g')
          if (( $(echo "$coverage < 100" | bc -l) )); then
            echo "Code coverage is below 100%: $coverage%"
            exit 1
          fi
      - name: Upload coverage report
        uses: codecov/codecov-action@v4
        with:
          file: lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: doanthaibao/rust_string_utils
      - name: Check for Cargo.toml version change
        id: cargo_version_change
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -q 'Cargo.toml'; then
            echo "version_changed=true" >> $GITHUB_ENV
          else
            echo "version_changed=false" >> $GITHUB_ENV
          fi
      - name: Release to crates
        if: env.version_changed == 'true' && github.ref == 'refs/heads/master' && github.event_name == 'push'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: cargo publish --verbose